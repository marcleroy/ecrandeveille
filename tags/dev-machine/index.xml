<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev machine on Tech watch site</title><link>https://marcleroy.github.io/ecrandeveille/tags/dev-machine/</link><description>Recent content in Dev machine on Tech watch site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 20 Mar 2021 18:00:00 +0000</lastBuildDate><atom:link href="https://marcleroy.github.io/ecrandeveille/tags/dev-machine/index.xml" rel="self" type="application/rss+xml"/><item><title>Azure CLI WebApp Up</title><link>https://marcleroy.github.io/ecrandeveille/posts/azure-cli/</link><pubDate>Sat, 20 Mar 2021 18:00:00 +0000</pubDate><guid>https://marcleroy.github.io/ecrandeveille/posts/azure-cli/</guid><description>Commands In Azure CLI
List the subscription accounts
\$ az account list Set the default subscription
\$ az account set --subscription mysubscription Creating Web app with service plan with &amp;ldquo;az webapp up&amp;rdquo;
marc@Azure:~/weebappsite$ git clone &amp;lt;https://github.com/Azure-Samples/html-docs-hello-world.git&amp;gt; Cloning into &amp;#39;html-docs-hello-world&amp;#39;... remote: Enumerating objects: 46, done. remote: Total 46 (delta 0), reused 0 (delta 0), pack-reused 46 Unpacking objects: 100% (46/46), done. marc@Azure:~/weebappsite$ ls html-docs-hello-world marc@Azure:~/weebappsite$ cd html-docs-hello-world/ marc@Azure:~/weebappsite/html-docs-hello-world$ az webapp up -l westeurope -n mywatchsite --html az webapp up -l westeurope -n mywatchsite --html az webapp up [--dryrun] [--html] [--ids] [--launch-browser] [--location] [--logs] [--name] [--os-type {Linux, Windows}] [--plan] [--resource-group] [--runtime] [--sku {B1, B2, B3, D1, F1, FREE, I1, I1v2, I2, I2v2, I3, I3v2, P1V2, P1V3, P2V2, P2V3, P3V2, P3V3, PC2, PC3, PC4, S1, S2, S3, SHARED}] [--subscription]</description></item><item><title>Visual Studio Code Remote Development</title><link>https://marcleroy.github.io/ecrandeveille/posts/visual-studio-code-remote-development/</link><pubDate>Fri, 28 Feb 2020 23:32:01 +0000</pubDate><guid>https://marcleroy.github.io/ecrandeveille/posts/visual-studio-code-remote-development/</guid><description>Visual Studio Code Remote Development allows you to use a container, remote machine, or the Windows Subsystem for Linux (WSL) as a full-featured development environment. It effectively splits VS Code in half and runs the client part on your machine and the &amp;ldquo;VS Code Server&amp;rdquo; basically anywhere else. The Remote Development extension pack includes three extensions. See the following articles to get started with each of them:
Remote - SSH - Connect to any location by opening folders on a remote machine/VM using SSH.</description></item><item><title>Chocolatey management</title><link>https://marcleroy.github.io/ecrandeveille/posts/chocolatey-management/</link><pubDate>Thu, 06 Feb 2020 21:42:13 +0000</pubDate><guid>https://marcleroy.github.io/ecrandeveille/posts/chocolatey-management/</guid><description>Chocolatey est un gestionnaire de paquets pour Windows. C’est un programme qui vous permet d’installer et de désinstaller des applications à la vitesse de l’éclair en utilisant la commande choco. Son point fort : il est capable de mettre à jour l’ensemble des applications installées sur votre système avec une seule commande !
See https://github.com/chocolatey/choco/wiki/CommandsInstall#options-and-switches
Source de cet article :
From https://lecrabeinfo.net/chocolatey-gestionnaire-paquets-windows.html
Pour mettre à jour des logiciels avec Chocolatey :</description></item><item><title>Managing the NuGet packages</title><link>https://marcleroy.github.io/ecrandeveille/posts/managing-the-nuget-packages/</link><pubDate>Fri, 24 Jan 2020 21:23:22 +0000</pubDate><guid>https://marcleroy.github.io/ecrandeveille/posts/managing-the-nuget-packages/</guid><description>From Managing the global packages, cache, and temp folders here
Viewing folder locations You can view locations using the nuget locals command:
# Display locals for all folders: global-packages, http cache, temp and plugins cache nuget locals all -list You can also view folder locations using the dotnet nuget locals command:
dotnet nuget locals all --list Clearing local folders If you encounter package installation problems or otherwise want to ensure that you&amp;rsquo;re installing packages from a remote gallery, use the locals --clear option (dotnet.</description></item><item><title>Clean Desktop Dev Machine</title><link>https://marcleroy.github.io/ecrandeveille/posts/clean-desktop-dev-machine/</link><pubDate>Fri, 24 Jan 2020 21:09:44 +0000</pubDate><guid>https://marcleroy.github.io/ecrandeveille/posts/clean-desktop-dev-machine/</guid><description>Need place on a dev machine ? PatchCleaner Clean c:\Windows\Installer
PatchCleaner obtains a list of known patches that are required by the computer from the Operating system. This list is then compared against all the files in the c:\Windows\Installer directory
DriverStore Explorer - rapr https://github.com/lostindark/DriverStoreExplorer
DriverStore Explorer [RAPR] makes it easier to deal with Windows driver store. Supported operations include enumeration, adding a driver package (stage), adding &amp;amp; installing, deletion and force deletion from the driver store.</description></item></channel></rss>